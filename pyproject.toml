[project]
name = "alpaqa-lasso"
readme = "python/README.rst"
requires-python = ">=3.8"
license = { "file" = "LICENSE" }
authors = [{ "name" = "Pieter P", "email" = "pieter.p.dev@outlook.com" }]
keywords = ["optimization", "alpaqa", "lasso"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Typing :: Typed",
]
description = "Loadable lasso problem for the alpaqa solver"
version = "1.0.0a17.dev0"
dependencies = ["alpaqa==1.0.0a17.dev0"] # TODO: pin version once alpaqa is released

[project.urls]
"Documentation" = "https://kul-optec.github.io/alpaqa"
"Source" = "https://github.com/tttapa/alpaqa-lasso"
"Bug Tracker" = "https://github.com/tttapa/alpaqa-lasso/issues"

[build-system]
requires = ["py-build-cmake~=0.2.0a11"]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module]
name = "alpaqa"
directory = "python"
namespace = true

[tool.py-build-cmake.sdist]
include = [
    "CMakeLists.txt",
    "src",
    "cmake",
]
exclude = []

[tool.py-build-cmake.cmake]
minimum_version = "3.24"
source_path = "."
args = ["-Wdev"]
build_args = ["-j"]
install_components = ["python_modules"]
[tool.py-build-cmake.cmake.options]
"WITH_PYTHON:BOOL" = "On"

[tool.py-build-cmake.linux.cmake]
# config = ["RelWithDebInfo"]
# generator = "Ninja Multi-Config"
[tool.py-build-cmake.mac.cmake]
config = ["RelWithDebInfo"]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.windows.cmake]
config = ["RelWithDebInfo"]

[tool.py-build-cmake.editable]
mode = "symlink"

[tool.cibuildwheel]
build-verbosity = 1
environment = { PY_BUILD_CMAKE_VERBOSE="1" }

[tool.cibuildwheel.macos]
archs = ["universal2"]

[tool.cibuildwheel.windows]
archs = ["AMD64", "x86", "ARM64"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["python/test"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
